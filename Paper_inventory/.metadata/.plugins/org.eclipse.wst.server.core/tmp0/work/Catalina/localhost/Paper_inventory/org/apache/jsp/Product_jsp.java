/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.12
 * Generated at: 2025-06-02 04:47:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.DriverManager;
import com.mysql.cj.jdbc.Driver;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Connection;

public final class Product_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mysql.cj.jdbc.Driver");
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Product</title>\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<!-- Font Awesome for icons -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css\">\r\n");
      out.write("<!-- Custom CSS -->\r\n");
      out.write("<style>\r\n");
      out.write("/* Main Layout */\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	background-color: #f8f9fa;\r\n");
      out.write("	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".dashboard-container {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	min-height: 100vh;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Sidebar Styles */\r\n");
      out.write(".sidebar {\r\n");
      out.write("	width: 240px;\r\n");
      out.write("	background-color: #3b82f6; /* Blue 600 equivalent */\r\n");
      out.write("	color: white;\r\n");
      out.write("	transition: all 0.3s ease-in-out;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar.collapsed {\r\n");
      out.write("	width: 64px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-header {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: space-between;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-title {\r\n");
      out.write("	font-size: 1.25rem;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-toggle {\r\n");
      out.write("	background: transparent;\r\n");
      out.write("	border: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	padding: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-toggle:hover {\r\n");
      out.write("	background-color: rgba(255, 255, 255, 0.1);\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-menu {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	padding-top: 16px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-link {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	padding: 12px 16px;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	color: white;\r\n");
      out.write("	margin: 4px 0;\r\n");
      out.write("	transition: background-color 0.2s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-link:hover {\r\n");
      out.write("	background-color: #2563eb; /* Blue 700 equivalent */\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-link.active {\r\n");
      out.write("	background-color: #1d4ed8; /* Blue 800 equivalent */\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-link i {\r\n");
      out.write("	font-size: 1.25rem;\r\n");
      out.write("	width: 20px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar-link .link-text {\r\n");
      out.write("	margin-left: 12px;\r\n");
      out.write("	white-space: nowrap;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".sidebar.collapsed .sidebar-title, .sidebar.collapsed .link-text {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Main Content */\r\n");
      out.write(".main-content {\r\n");
      out.write("	flex: 1;\r\n");
      out.write("	padding: 24px;\r\n");
      out.write("	overflow-y: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Stat Cards */\r\n");
      out.write(".stat-card {\r\n");
      out.write("	border-radius: 8px;\r\n");
      out.write("	border: 1px solid rgba(0, 0, 0, 0.125);\r\n");
      out.write("	box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".stat-icon {\r\n");
      out.write("	font-size: 1.25rem;\r\n");
      out.write("	color: #6b7280; /* Text muted equivalent */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".stat-title {\r\n");
      out.write("	font-size: 0.875rem;\r\n");
      out.write("	color: #6b7280; /* Text muted equivalent */\r\n");
      out.write("	margin-bottom: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".stat-value {\r\n");
      out.write("	font-size: 1.5rem;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Status Badges */\r\n");
      out.write(".status {\r\n");
      out.write("	padding: 4px 8px;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-size: 0.75rem;\r\n");
      out.write("	font-weight: 500;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".status.active {\r\n");
      out.write("	background-color: #ecfdf5;\r\n");
      out.write("	color: #10b981; /* Green 500 equivalent */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".status.inactive {\r\n");
      out.write("	background-color: #fef2f2;\r\n");
      out.write("	color: #ef4444; /* Red 500 equivalent */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".status.new {\r\n");
      out.write("	background-color: #eff6ff;\r\n");
      out.write("	color: #3b82f6; /* Blue 500 equivalent */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Customers Page Styles */\r\n");
      out.write(".customers-container {\r\n");
      out.write("	max-width: 100%;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".search-wrapper {\r\n");
      out.write("	width: 300px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".customer-table {\r\n");
      out.write("	font-size: 0.9rem;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".customer-table th {\r\n");
      out.write("	font-weight: 600;\r\n");
      out.write("	color: #4b5563;\r\n");
      out.write("	border-bottom-width: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".customer-table td {\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".customer-table .form-check {\r\n");
      out.write("	margin: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Responsive Adjustments */\r\n");
      out.write("@media ( max-width : 768px) {\r\n");
      out.write("	.sidebar {\r\n");
      out.write("		width: 64px;\r\n");
      out.write("	}\r\n");
      out.write("	.sidebar .sidebar-title, .sidebar .link-text {\r\n");
      out.write("		display: none;\r\n");
      out.write("	}\r\n");
      out.write("	.main-content {\r\n");
      out.write("		padding: 16px;\r\n");
      out.write("	}\r\n");
      out.write("	.customers-container .btn-group {\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("	}\r\n");
      out.write("	.customers-container .btn-group .btn {\r\n");
      out.write("		margin-bottom: 8px;\r\n");
      out.write("		margin-right: 0 !important;\r\n");
      out.write("	}\r\n");
      out.write("	.search-wrapper {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		margin-bottom: 16px;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".action-buttons {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	right: 20px;\r\n");
      out.write("	top: 150px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	gap: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("@media ( max-width : 992px) {\r\n");
      out.write("	.customers-container .d-flex {\r\n");
      out.write("		flex-direction: column;\r\n");
      out.write("	}\r\n");
      out.write("	.customers-container .d-flex .btn {\r\n");
      out.write("		margin-bottom: 8px;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".status.active {\r\n");
      out.write("	background-color: #ecfdf5;\r\n");
      out.write("	color: #10b981;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".status.inactive {\r\n");
      out.write("	background-color: #fef2f2;\r\n");
      out.write("	color: #ef4444;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".card:hover {\r\n");
      out.write("	transform: translateY(-5px);\r\n");
      out.write("	box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("	transition: 0.3s ease;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"dashboard-container\">\r\n");
      out.write("		<!-- Sidebar -->\r\n");
      out.write("		<div class=\"sidebar\" id=\"sidebar\">\r\n");
      out.write("			<div class=\"sidebar-header\">\r\n");
      out.write("				<h2 class=\"sidebar-title\">Dashboard</h2>\r\n");
      out.write("				<button class=\"btn sidebar-toggle\" id=\"sidebarToggle\">\r\n");
      out.write("					<i class=\"fa fa-bars\"></i>\r\n");
      out.write("				</button>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"sidebar-menu\">\r\n");
      out.write("				<div class=\"profile\">\r\n");
      out.write("					<a href=\"#\" class=\"profile-link\"> <img\r\n");
      out.write("						src=\"https://via.placeholder.com/50\" alt=\"Owner\"\r\n");
      out.write("						class=\"profile-image\"> <span class=\"owner-name\">Owner</span>\r\n");
      out.write("					</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<a href=\"Home.html\" class=\"sidebar-link active\"> <i\r\n");
      out.write("					class=\"fa fa-home\"></i> <span class=\"link-text\">Home</span>\r\n");
      out.write("				</a> <a href=\"#\" class=\"sidebar-link\"> <i class=\"fa fa-chart-bar\"></i>\r\n");
      out.write("					<span class=\"link-text\">Analytics</span>\r\n");
      out.write("				</a> <a href=\"Product.html\" class=\"sidebar-link\"> <i\r\n");
      out.write("					class=\"fa fa-shopping-bag\"></i> <span class=\"link-text\">Products</span>\r\n");
      out.write("				</a> <a href=\"Retailer.html\" class=\"sidebar-link\"> <i\r\n");
      out.write("					class=\"fa fa-users\"></i> <span class=\"link-text\">Retailer</span> <a\r\n");
      out.write("					href=\"Order.html\" class=\"sidebar-link\"> <i\r\n");
      out.write("						class=\"fa fa-shopping-cart\"></i> <span class=\"link-text\">Orders</span>\r\n");
      out.write("				</a>\r\n");
      out.write("\r\n");
      out.write("				</a> <a href=\"#\" class=\"sidebar-link\"> <i class=\"fa fa-file-invoice\"></i>\r\n");
      out.write("					<span class=\"link-text\">Billing</span>\r\n");
      out.write("				</a> <a href=\"login.jsp\" class=\"sidebar-link\"> <i\r\n");
      out.write("					class=\"fa fa-sign-out-alt\"></i> <span class=\"link-text\">Logout</span>\r\n");
      out.write("				</a>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<!-- Main Content -->\r\n");
      out.write("		<div class=\"main-content\">\r\n");
      out.write("			<div class=\"customers-container\">\r\n");
      out.write("				<div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n");
      out.write("					<h2 class=\"m-0\">Product</h2>\r\n");
      out.write("					<div class=\"btn-group\"></div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n");
      out.write("					<div class=\"search-wrapper\">\r\n");
      out.write("						<div class=\"input-group\">\r\n");
      out.write("							<span class=\"input-group-text bg-white border-end-0\"> <i\r\n");
      out.write("								class=\"fa fa-search text-muted\"></i>\r\n");
      out.write("							</span> <input type=\"text\" class=\"form-control border-start-0\"\r\n");
      out.write("								placeholder=\"Search customers...\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"d-flex\">\r\n");
      out.write("\r\n");
      out.write("						</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"d-flex\"\r\n");
      out.write("					style=\"right: 50px; top: 150px; display: flex; gap: 10px; margin-left: 980px;\">\r\n");
      out.write("					<button class=\"btn btn-outline-primary me-2\">\r\n");
      out.write("						<i class=\"fa fa-edit me-1\"></i> <span>Update</span>\r\n");
      out.write("					</button>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"card\">\r\n");
      out.write("					<div class=\"card-body p-0\">\r\n");
      out.write("						<div class=\"table-responsive\">\r\n");
      out.write("							<table class=\"table customer-table mb-0\">\r\n");
      out.write("								<thead>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th>\r\n");
      out.write("											<div class=\"form-check\">\r\n");
      out.write("												<input class=\"form-check-input\" type=\"checkbox\"\r\n");
      out.write("													id=\"selectAll\"> <label class=\"form-check-label\"\r\n");
      out.write("													for=\"selectAll\"></label>\r\n");
      out.write("											</div>\r\n");
      out.write("										</th>\r\n");
      out.write("										<th>product_id</th>\r\n");
      out.write("										<th>product_name</th>\r\n");
      out.write("										<th>unit_price</th>\r\n");
      out.write("										<th>quantity_in_stock</th>\r\n");
      out.write("										<th>Stock Status</th>\r\n");
      out.write("\r\n");
      out.write("									</tr>\r\n");
      out.write("								</thead>\r\n");
      out.write("								<tbody>\r\n");
      out.write("									");

									Connection conn = null;
									Statement stmt = null;
									ResultSet rs = null;

									String driverNm = "com.mysql.cj.jdbc.Driver";
									String url = "jdbc:mysql://localhost:3307/inventory";

									try {
										Class.forName(driverNm);
										conn = DriverManager.getConnection(url, "root", "");
										stmt = conn.createStatement();
										rs = stmt.executeQuery("SELECT * FROM products");

										while (rs.next()) {
									
      out.write("\r\n");
      out.write("									<tr>\r\n");
      out.write("										<td>\r\n");
      out.write("											<div class=\"form-check\">\r\n");
      out.write("												<input class=\"form-check-input\" type=\"checkbox\">\r\n");
      out.write("											</div>\r\n");
      out.write("										</td>\r\n");
      out.write("										<td>");
      out.print(rs.getString("product_id"));
      out.write("</td>\r\n");
      out.write("										<td>");
      out.print(rs.getString("product_name"));
      out.write("</td>\r\n");
      out.write("										<td>");
      out.print(rs.getString("unit_price"));
      out.write("</td>\r\n");
      out.write("										<td>");
      out.print(rs.getInt("quantity_in_stock") );
      out.write("</td>\r\n");
      out.write("										<td>");

										int quantity = rs.getInt("quantity_in_stock");
										if (quantity < 50) {
										
      out.write("\r\n");
      out.write("										<span class=\"status inactive\">Low Stock</span>\r\n");
      out.write("										");

										} else {
										
      out.write("\r\n");
      out.write("										<span class=\"status active\">In Stock</span>\r\n");
      out.write("										");

										}
										
      out.write("</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									");

									}
									} catch (Exception e) {
									out.println("Error: " + e.getMessage());
									} finally {
									try {
									if (rs != null)
										rs.close();
									} catch (Exception e) {
									}
									try {
									if (stmt != null)
										stmt.close();
									} catch (Exception e) {
									}
									try {
									if (conn != null)
										conn.close();
									} catch (Exception e) {
									}
									}
									
      out.write("\r\n");
      out.write("\r\n");
      out.write("								</tbody>\r\n");
      out.write("							</table>\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Bootstrap Bundle with Popper -->\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("	<!-- Custom JS -->\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write(" // Wait for the DOM to be fully loaded\r\n");
      out.write("    document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("        // Sidebar toggle functionality\r\n");
      out.write("        const sidebarToggle = document.getElementById('sidebarToggle');\r\n");
      out.write("        const sidebar = document.getElementById('sidebar');\r\n");
      out.write("        \r\n");
      out.write("        sidebarToggle.addEventListener('click', function() {\r\n");
      out.write("            sidebar.classList.toggle('collapsed');\r\n");
      out.write("        });\r\n");
      out.write("        \r\n");
      out.write("        // Check if we're on mobile\r\n");
      out.write("        function checkMobile() {\r\n");
      out.write("            if (window.innerWidth < 768) {\r\n");
      out.write("                sidebar.classList.add('collapsed');\r\n");
      out.write("            } else {\r\n");
      out.write("                sidebar.classList.remove('collapsed');\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        // Initial check\r\n");
      out.write("        checkMobile();\r\n");
      out.write("        \r\n");
      out.write("        // Listen for window resize\r\n");
      out.write("        window.addEventListener('resize', checkMobile);\r\n");
      out.write("\r\n");
      out.write("        // Select all checkbox functionality\r\n");
      out.write("        const selectAllCheckbox = document.getElementById('selectAll');\r\n");
      out.write("        if (selectAllCheckbox) {\r\n");
      out.write("            selectAllCheckbox.addEventListener('change', function() {\r\n");
      out.write("                const checkboxes = document.querySelectorAll('table .form-check-input');\r\n");
      out.write("                checkboxes.forEach(checkbox => {\r\n");
      out.write("                    checkbox.checked = selectAllCheckbox.checked;\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Individual checkbox change handler\r\n");
      out.write("        const checkboxes = document.querySelectorAll('table .form-check-input:not(#selectAll)');\r\n");
      out.write("        checkboxes.forEach(checkbox => {\r\n");
      out.write("            checkbox.addEventListener('change', function() {\r\n");
      out.write("                const allChecked = Array.from(checkboxes).every(cb => cb.checked);\r\n");
      out.write("                const someChecked = Array.from(checkboxes).some(cb => cb.checked);\r\n");
      out.write("                \r\n");
      out.write("                if (selectAllCheckbox) {\r\n");
      out.write("                    selectAllCheckbox.checked = allChecked;\r\n");
      out.write("                    selectAllCheckbox.indeterminate = someChecked && !allChecked;\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        // Search functionality\r\n");
      out.write("        const searchInput = document.querySelector('.search-wrapper input');\r\n");
      out.write("        if (searchInput) {\r\n");
      out.write("            searchInput.addEventListener('input', function() {\r\n");
      out.write("                const searchText = searchInput.value.toLowerCase();\r\n");
      out.write("                const rows = document.querySelectorAll('tbody tr');\r\n");
      out.write("                \r\n");
      out.write("                rows.forEach(row => {\r\n");
      out.write("                    const text = row.textContent.toLowerCase();\r\n");
      out.write("                    if (text.includes(searchText)) {\r\n");
      out.write("                        row.style.display = '';\r\n");
      out.write("                    } else {\r\n");
      out.write("                        row.style.display = 'none';\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
