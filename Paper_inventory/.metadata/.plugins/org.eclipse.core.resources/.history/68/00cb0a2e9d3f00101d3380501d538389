<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@page import="java.sql.PreparedStatement"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="com.mysql.cj.jdbc.Driver"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.Statement"%>
<%@page import="java.sql.Connection"%>
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Orders</title>
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<style>
/* ... (keep your CSS as in the original file) ... */
</style>
</head>
<body>
<div class="dashboard-container">
    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h2 class="sidebar-title">Dashboard</h2>
            <button class="btn sidebar-toggle" id="sidebarToggle">
                <i class="fa fa-bars"></i>
            </button>
        </div>
        <div class="sidebar-menu">
            <div class="profile">
                <a href="#" class="profile-link">
                    <img src="https://via.placeholder.com/50" alt="Owner" class="profile-image">
                    <span class="owner-name">Owner</span>
                </a>
            </div>
            <a href="Home.html" class="sidebar-link active"><i class="fa fa-home"></i><span class="link-text">Home</span></a>
            <a href="#" class="sidebar-link"><i class="fa fa-chart-bar"></i><span class="link-text">Analytics</span></a>
            <a href="Product.jsp" class="sidebar-link"><i class="fa fa-shopping-bag"></i><span class="link-text">Products</span></a>
            <a href="Retailer.jsp" class="sidebar-link"><i class="fa fa-users"></i><span class="link-text">Retailer</span></a>
            <a href="Order.jsp" class="sidebar-link"><i class="fa fa-shopping-cart"></i><span class="link-text">Orders</span></a>
            <a href="#" class="sidebar-link"><i class="fa fa-file-invoice"></i><span class="link-text">Billing</span></a>
            <a href="logout.jsp" class="sidebar-link"><i class="fa fa-sign-out-alt"></i><span class="link-text">Logout</span></a>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content container">
        <h1>Orders</h1>
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-primary mb-3" data-bs-toggle="modal" data-bs-target="#orderModal">
            Create Order
        </button>

        <!-- Order Modal -->
        <div class="modal fade" id="orderModal" tabindex="-1" aria-labelledby="orderModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <form id="orderForm" action="SaveOrderServlet" method="post" onsubmit="return prepareOrderItems()">
                        <div class="modal-header">
                            <h5 class="modal-title" id="orderModalLabel">Create Order</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <!-- Customer Info -->
                            <div class="mb-3">
                                <label for="customerName" class="form-label">Customer Name</label>
                                <input type="text" class="form-control" id="customerName" name="customerName" required />
                            </div>
                            <!-- Product Selection -->
                            <div class="row align-items-end">
                                <div class="col-md-4">
                                    <label for="productSelect" class="form-label">Select Product</label>
                                    <select class="form-select" id="productSelect">
                                        <option value="" disabled selected>Choose Product</option>
                                        <%
                                        // Load products from DB
                                        Connection conn = null;
                                        PreparedStatement ps = null;
                                        ResultSet rs = null;
                                        try {
                                            Class.forName("com.mysql.cj.jdbc.Driver");
                                            conn = DriverManager.getConnection("jdbc:mysql://localhost/inventory", "root", "");
                                            ps = conn.prepareStatement("SELECT * FROM Products");
                                            rs = ps.executeQuery();
                                            while (rs.next()) {
                                        %>
                                        <option value="<%=rs.getInt("product_id")%>" data-price="<%=rs.getDouble("unit_price")%>">
                                            <%=rs.getString("product_name")%>
                                        </option>
                                        <%
                                            }
                                        } catch (Exception e) {
                                            out.println("<option disabled>Error loading products</option>");
                                        } finally {
                                            if (rs != null) try { rs.close(); } catch (Exception e) {}
                                            if (ps != null) try { ps.close(); } catch (Exception e) {}
                                            if (conn != null) try { conn.close(); } catch (Exception e) {}
                                        }
                                        %>
                                    </select>
                                </div>
                                <div class="col-md-2">
                                    <label for="unitPrice" class="form-label">Price</label>
                                    <input type="number" id="unitPrice" class="form-control" readonly />
                                </div>
                                <div class="col-md-2">
                                    <label for="quantity" class="form-label">Quantity</label>
                                    <input type="number" id="quantity" class="form-control" min="1" value="1" />
                                </div>
                                <div class="col-md-2">
                                    <button type="button" class="btn btn-success" onclick="addProduct()">Add</button>
                                </div>
                            </div>
                            <!-- Products Table -->
                            <hr />
                            <table class="table table-bordered mt-3" id="productTable">
                                <thead>
                                    <tr>
                                        <th>Product ID</th>
                                        <th>Name</th>
                                        <th>Qty</th>
                                        <th>Unit Price</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Rows added dynamically by JS -->
                                </tbody>
                            </table>
                            <!-- Hidden field to send JSON order items -->
                            <input type="hidden" name="orderItemsJson" id="orderItemsJson" />
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Submit Order</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- End Modal -->
    </div>
</div>

<!-- Bootstrap JS Bundle -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<!-- Your Custom JS -->
<script>
const productSelect = document.getElementById('productSelect');
const unitPriceInput = document.getElementById('unitPrice');
const quantityInput = document.getElementById('quantity');
const productTableBody = document.querySelector('#productTable tbody');
const orderItemsJsonInput = document.getElementById('orderItemsJson');

let orderItems = [];

// Update unit price when product changes
productSelect.addEventListener('change', () => {
    const selectedOption = productSelect.options[productSelect.selectedIndex];
    const price = selectedOption.getAttribute('data-price') || 0;
    unitPriceInput.value = price;
    quantityInput.value = 1;
});

// Add product to table and orderItems array
function addProduct() {
    const productId = productSelect.value;
    if (!productId) {
        alert('Please select a product.');
        return;
    }
    const productName = productSelect.options[productSelect.selectedIndex].text;
    const unitPrice = parseFloat(unitPriceInput.value);
    const quantity = parseInt(quantityInput.value);

    if (quantity < 1 || isNaN(quantity)) {
        alert('Please enter a valid quantity.');
        return;
    }

    // Check if product already added
    const existingIndex = orderItems.findIndex(item => item.productId == productId);
    if (existingIndex > -1) {
        // Update quantity
        orderItems[existingIndex].quantity += quantity;
    } else {
        orderItems.push({ productId, productName, unitPrice, quantity });
    }

    renderOrderTable();
}

// Render order items in table
function renderOrderTable() {
    productTableBody.innerHTML = '';
    orderItems.forEach((item, index) => {
        const row = document.createElement('tr');

        row.innerHTML = `
            <td>${item.productId}</td>
            <td>${item.productName}</td>
            <td>${item.quantity}</td>
            <td>${item.unitPrice.toFixed(2)}</td>
            <td>${(item.unitPrice * item.quantity).toFixed(2)}</td>
            <td><button type="button" class="btn btn-danger btn-sm" onclick="removeProduct(${index})">Remove</button></td>
        `;
        productTableBody.appendChild(row);
    });
}

// Remove product from orderItems
function removeProduct(index) {
    orderItems.splice(index, 1);
    renderOrderTable();
}

// Before form submit, prepare JSON of order items
function prepareOrderItems() {
    if (orderItems.length === 0) {
        alert('Please add at least one product to the order.');
        return false;
    }
    orderItemsJsonInput.value = JSON.stringify(orderItems);
    return true;
}

// Reset modal when closed
const orderModal = document.getElementById('orderModal');
orderModal.addEventListener('hidden.bs.modal', () => {
    document.getElementById('orderForm').reset();
    orderItems = [];
    renderOrderTable();
    unitPriceInput.value = '';
});
</script>
</body>
</html>
