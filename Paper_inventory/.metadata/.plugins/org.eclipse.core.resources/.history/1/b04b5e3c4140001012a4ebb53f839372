<%@ page language="java" contentType="text/html; charset=UTF-8"
	pageEncoding="UTF-8"%>
<%@ page import="java.sql.*"%>
<%@page import="java.sql.DriverManager"%>
<%@page import="com.mysql.cj.jdbc.Driver"%>
<%@page import="java.sql.ResultSet"%>
<%@page import="java.sql.Statement"%>
<%@page import="java.sql.Connection"%>

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Dashboard</title>
<!-- Bootstrap CSS -->
<link
	href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
	rel="stylesheet">
<!-- Font Awesome for icons -->
<link rel="stylesheet"
	href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
<!-- Custom CSS -->
<link rel="stylesheet" href="styles.css">
<!-- Chart.js for charts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<style>
/* Main Layout */
body {
	margin: 0;
	padding: 0;
	background-color: #f8f9fa;
	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.dashboard-container {
	display: flex;
	min-height: 100vh;
}

/* Sidebar Styles */
.sidebar {
	width: 240px;
	background-color: #3b82f6; /* Blue 600 equivalent */
	color: white;
	transition: all 0.3s ease-in-out;
	display: flex;
	flex-direction: column;
}

.sidebar.collapsed {
	width: 64px;
}

.sidebar-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 16px;
}

.sidebar-title {
	font-size: 1.25rem;
	font-weight: bold;
	margin: 0;
}

.sidebar-toggle {
	background: transparent;
	border: none;
	color: white;
	cursor: pointer;
	padding: 8px;
}

.sidebar-toggle:hover {
	background-color: rgba(255, 255, 255, 0.1);
	border-radius: 4px;
}

.sidebar-menu {
	display: flex;
	flex-direction: column;
	padding-top: 16px;
}

.sidebar-link {
	display: flex;
	align-items: center;
	padding: 12px 16px;
	text-decoration: none;
	color: white;
	margin: 4px 0;
	transition: background-color 0.2s;
}

.sidebar-link:hover {
	background-color: #2563eb; /* Blue 700 equivalent */
	color: white;
}

.sidebar-link.active {
	background-color: #1d4ed8; /* Blue 800 equivalent */
	color: white;
}

.sidebar-link i {
	font-size: 1.25rem;
	width: 20px;
	text-align: center;
}

.sidebar-link .link-text {
	margin-left: 12px;
	white-space: nowrap;
}

.sidebar.collapsed .sidebar-title, .sidebar.collapsed .link-text {
	display: none;
}

/* Main Content */
.main-content {
	flex: 1;
	padding: 24px;
	overflow-y: auto;
}

/* Stat Cards */
.stat-card {
	border-radius: 8px;
	border: 1px solid rgba(0, 0, 0, 0.125);
	box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.stat-icon {
	font-size: 1.25rem;
	color: #6b7280; /* Text muted equivalent */
}

.stat-title {
	font-size: 0.875rem;
	color: #6b7280; /* Text muted equivalent */
	margin-bottom: 4px;
}

.stat-value {
	font-size: 1.5rem;
	font-weight: bold;
	margin: 0;
}

/* Chart Container */
.chart-container {
	height: 320px;
	width: 100%;
}

/* Product Visualization */
.product-visualization {
	height: 256px;
	background-color: #312e81; /* Indigo 950 equivalent */
	border-radius: 50%;
}

/* Status Badges */
.status {
	padding: 4px 8px;
	border-radius: 4px;
	font-size: 0.75rem;
	font-weight: 500;
}

.status.pending {
	color: #d97706; /* Amber 500 equivalent */
}

.status.urgent {
	color: #ef4444; /* Red 500 equivalent */
}

/* Responsive Adjustments */
@media ( max-width : 768px) {
	.sidebar {
		width: 64px;
	}
	.sidebar .sidebar-title, .sidebar .link-text {
		display: none;
	}
	.main-content {
		padding: 16px;
	}
}
</style>
<body>
	<div class="dashboard-container">
		<!-- Sidebar -->
		<div class="sidebar" id="sidebar">
			<div class="sidebar-header">
				<h2 class="sidebar-title">Dashboard</h2>
				<button class="btn sidebar-toggle" id="sidebarToggle">
					<i class="fa fa-bars"></i>
				</button>
			</div>
			<div class="sidebar-menu">

				 
				<a href="Home.jsp" class="sidebar-link active"> <i class="fa fa-home"></i>
					<span class="link-text">Home</span>
				</a> <a href="" class="sidebar-link"> <i class="fa fa-chart-bar"></i>
					<span class="link-text">Supplier</span>
				</a> <a href="Product.jsp" class="sidebar-link"> <i class="fa fa-shopping-bag"></i>
					<span class="link-text">Products</span>
				</a> <a href="Retailer.jsp" class="sidebar-link"> <i class="fa fa-users"></i> <span
					class="link-text">Retailer</span> 
					<a href="Order.jsp" class="sidebar-link">
						<i class="fa fa-shopping-cart"></i> <span class="link-text">Orders</span>
				</a>

				</a> <a href="Billing.jsp" class="sidebar-link"> <i class="fa fa-file-invoice"></i>
					<span class="link-text">Billing</span>
				</a> <a href="Login.html" class="sidebar-link"> <i
					class="fa fa-sign-out-alt"></i> <span class="link-text">Logout</span>
				</a>
			</div>
		</div>

	<div class="container mt-5">
		<h2>Create Purchase Order</h2>
		<form action="SavePurchase.jsp" method="post" id="purchaseForm">

			<!-- Product Dropdown -->
			<div class="mb-3">
				<label for="product" class="form-label">Select Product:</label> <select
					class="form-control" id="product" name="product">
					<option value="" disabled selected>Choose a Product</option>
					<%
					    try {
					      Class.forName("com.mysql.cj.jdbc.Driver");
					      Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3307/inventory", "root", "");
					      Statement stmt = con.createStatement();
					      ResultSet rs = stmt.executeQuery("SELECT product_id, product_name FROM products");
					      while(rs.next()){
					  %>
					<option value="<%= rs.getInt("product_id") %>"
						data-name="<%= rs.getString("product_name") %>">
						<%= rs.getString("product_name") %>
					</option>
					<%
					      }
					      con.close();
					    } catch(Exception e) {
					      out.println("Error loading products: " + e.getMessage());
					    }
					%>
				</select>
			</div>

			<!-- Quantity Input -->
			<div class="mb-3">
				<label for="quantity" class="form-label">Quantity:</label> <input
					type="number" class="form-control" id="quantity" min="1"
					placeholder="Enter quantity">
			</div>

			<!-- Button to add product to order list -->
			<button type="button" class="btn btn-success mb-3"
				onclick="addProduct()">Add Product</button>

			<!-- Purchase Order Product List Table -->
			<table class="table table-bordered" id="productTable">
				<thead>
					<tr>
						<th>Product</th>
						<th>Quantity</th>
						<th>Action</th>
					</tr>
				</thead>
				<tbody>
				</tbody>
			</table>

			<!-- Submit Purchase Order Button -->
			<button type="submit" class="btn btn-primary">Submit
				Purchase Order</button>
		</form>
	</div>

	<!-- Bootstrap Bundle JS -->
	<script
		src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

	<!-- JavaScript for Dynamic Purchase Order Creation -->
	<script>
	function addProduct() {
		  const productSelect = document.getElementById('product');
		  const selectedOption = productSelect.options[productSelect.selectedIndex];
		  const productId = productSelect.value;
		  const productName = selectedOption?.getAttribute('data-name') || selectedOption?.text;
		  const quantity = parseInt(document.getElementById('quantity').value);

		  console.log("Selected Product ID:", productId);
		  console.log("Selected Product Name:", productName);
		  console.log("Quantity:", quantity);

		  if (!productId) {
		    alert("Please select a product.");
		    return;
		  }

		  if (isNaN(quantity) || quantity <= 0) {
		    alert("Please enter a valid quantity.");
		    return;
		  }

		  // Check if already added
		  if (purchaseProducts.some(p => p.productId === productId)) {
		    alert("Product already added. Remove it to update quantity.");
		    return;
		  }

		  purchaseProducts.push({ productId, productName, quantity });

		  const tableBody = document.querySelector('#productTable tbody');
		  const newRow = tableBody.insertRow();

		  newRow.innerHTML = `
		    <td>${productName} <input type="hidden" name="productId[]" value="${productId}"></td>
		    <td>${quantity} <input type="hidden" name="quantity[]" value="${quantity}"></td>
		    <td><button type="button" class="btn btn-danger btn-sm" onclick="removeProduct(this)">Remove</button></td>
		  `;

		  // Reset input
		  productSelect.selectedIndex = 0;
		  document.getElementById('quantity').value = "";

    function removeProduct(button) {
      const row = button.parentNode.parentNode;
      const productId = row.querySelector("input[name='productId[]']").value;

      // Remove from purchaseProducts array
      purchaseProducts = purchaseProducts.filter(p => p.productId !== productId);

      // Remove row from table
      row.remove();
    }

    // Sidebar toggle & responsive
    document.addEventListener('DOMContentLoaded', function() {
      const sidebarToggle = document.getElementById('sidebarToggle');
      const sidebar = document.getElementById('sidebar');
      
      sidebarToggle.addEventListener('click', function() {
        sidebar.classList.toggle('collapsed');
      });
      
      function checkMobile() {
        if (window.innerWidth < 768) {
          sidebar.classList.add('collapsed');
        } else {
          sidebar.classList.remove('collapsed');
        }
      }
      
      checkMobile();
      
      window.addEventListener('resize', checkMobile);

      // Sales chart (if you add a canvas with id="salesChart" later)
      /*
      const salesChartCtx = document.getElementById('salesChart')?.getContext('2d');
      if(salesChartCtx) {
        const salesChart = new Chart(salesChartCtx, {
          type: 'bar',
          data: {
            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],
            datasets: [{
              label: 'Sales',
              data: [120, 150, 180, 200, 230, 210, 250],
              backgroundColor: 'rgba(59, 130, 246, 0.8)'
            }]
          },
          options: {
            scales: {
              y: { beginAtZero: true }
            }
          }
        });
      }
      */
    });
	</script>
</body>
</html>
